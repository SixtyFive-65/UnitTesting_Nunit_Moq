1. Testing Strings

public class HtmlFormatterTests
{
	[Test]
	public void FormatAsBold_WhenCalled_ShouldWrapInStrongElement()
	{
		var formatter = new HtmlFormatter();

		var result = formatter.FormatAsBold("abc");

		Assert.That(result, Does.StartWith("<strong>").IgnoreCase);
		Assert.That(result, Does.EndWith("</strong>").IgnoreCase);
		Assert.That(result, Does.Contain("abc").IgnoreCase);
	}
}

2.Testing Collection or Arrays

[Test]
public void GetOddNUmbers_LimitGreaterThan0_ReturnOrdNUmbers()
{
	var result = _math.GetOddNumbers(5);

	Assert.That(result, Is.Not.Empty);
	Assert.That(result.Count(), Is.EqualTo(3));

	//Assert.That(result, Does.Contain(1));
	//Assert.That(result, Does.Contain(3));
	//Assert.That(result, Does.Contain(5));

	Assert.That(result, Is.EquivalentTo(new[] { 1, 3, 5}));  //equivalent to above 3 lines
  //  Assert.That(result, Is.Ordered);
  //  Assert.That(result, Is.Unique);
}

3.Testing Correct Type returned typeOf

[Test]
public void GetCustomer_IdIsZero_ReturnNotFound()
{
  var controller = new CustomerController();

  var result = controller.GetCustomer(0);

  Assert.That(result, Is.TypeOf<NotFound>());
  //Assert.That(result, Is.InstanceOf<NotFound>());
}

4.Testing void methods.

[Test]
public void Log_WhenCalled_SetLastErrorProp()
{
	var logger = new ErrorLogger();

	logger.Log("a");

	Assert.That(logger.LastError, Is.EqualTo("a"));
}

5.Testing methods returning an exception / Delegate


[Test]
[TestCase(null)]
[TestCase("")]
[TestCase(" ")]
public void Log_InvalidError_ThrowArgumentNull(string error)
{
	var logger = new ErrorLogger();

	Assert.That(() => logger.Log(error), Throws.ArgumentNullException);
}


6.Testing methods that raise an event.

[Test]
public void Log_ValidError_RaiseErrorEvent()
{
  var logger = new ErrorLogger();

  var id = Guid.Empty;

  logger.ErrorLogged += (sender, args) => { id = args; }; //subscribe to the event before acting

  logger.Log("a");

  Assert.That(id, Is.Not.EqualTo(Guid.Empty));
}

7.Testing Private/Protected Methods :> Don't test private methods



